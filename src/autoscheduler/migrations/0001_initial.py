# Generated by Django 3.0.3 on 2020-03-28 16:19

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("program", "0085_sessions_and_availability"),
        ("camps", "0034_add_team_permission_sets"),
    ]

    operations = [
        migrations.CreateModel(
            name="AutoSchedule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "matrix",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.BooleanField(), size=None
                        ),
                        blank=True,
                        help_text="The matrix representing the calculated schedule. An array of arrays of booleans.",
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "applied",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="When this schedule was last applied",
                        null=True,
                    ),
                ),
                (
                    "readonly",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Is this AutoSchedule readonly? This is set when the schedule is applied.",
                    ),
                ),
                (
                    "camp",
                    models.ForeignKey(
                        help_text="The Camp this schedule belongs to",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="autoschedules",
                        to="camps.Camp",
                    ),
                ),
                (
                    "event_type",
                    models.ForeignKey(
                        help_text="The EventType this schedule is for",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="autoschedules",
                        to="program.EventType",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this Schedule",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ["created"],},
        ),
        migrations.CreateModel(
            name="AutoSlot",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "venue",
                    models.PositiveIntegerField(
                        help_text="The ID of the EventLocation this Slot is for"
                    ),
                ),
                (
                    "starts_at",
                    models.DateTimeField(help_text="The start time of this Slot"),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        help_text="The duration of this Slot (in minutes)"
                    ),
                ),
                (
                    "session",
                    models.PositiveIntegerField(
                        help_text="The ID of the EventSession object this Slot is part of"
                    ),
                ),
                (
                    "capacity",
                    models.PositiveIntegerField(
                        help_text="The capacity of the EventLocation this Slot is for"
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        help_text="The schedule to which this slot belongs",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="slots",
                        to="autoscheduler.AutoSchedule",
                    ),
                ),
            ],
            options={"ordering": ["created"],},
        ),
        migrations.CreateModel(
            name="AutoEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.PositiveIntegerField(
                        help_text="The ID of the program.Event object"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        help_text="The duration of this Event (in minutes)"
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        blank=True,
                        help_text="List of tags for this Event",
                        size=None,
                    ),
                ),
                (
                    "demand",
                    models.PositiveIntegerField(
                        help_text="The number of people going to this event"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        help_text="The program.Event object this AutoEvent belongs to. This field is set to None if the related Event is deleted.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="program.Event",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        help_text="The schedule to which this event belongs",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="autoscheduler.AutoSchedule",
                    ),
                ),
                (
                    "unavailability_events",
                    models.ManyToManyField(
                        help_text="Select the events which this event conflicts with",
                        to="autoscheduler.AutoEvent",
                    ),
                ),
                (
                    "unavailability_slots",
                    models.ManyToManyField(
                        help_text="Select the slots which are unavailable for this event",
                        to="autoscheduler.AutoSlot",
                    ),
                ),
            ],
            options={"ordering": ["created"],},
        ),
    ]
